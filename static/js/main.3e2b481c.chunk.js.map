{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/ContactItem/ContactItem.styled.js","components/Contact/ContactItem/ContactItem.jsx","components/Contact/ContactList/ContactList.jsx","components/utils/storage.js","App.js","index.js"],"names":["Label","styled","label","ContactForm","props","useState","name","setName","number","setNumber","handleChange","target","value","reset","onSubmit","e","preventDefault","type","pattern","title","required","onChange","Filter","onFilter","filter","setFilter","toLowerCase","StyledContact","li","ContactItem","onDelete","onClick","ContactList","contacts","map","id","STORAGE_NAME","App","localStorage","getItem","JSON","parse","loadContacts","setContacts","useEffect","setItem","stringify","saveContacts","find","contact","alert","newContact","uuidv4","createContact","newContactList","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2b481c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  + input[type=\"submit\"] {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: aquamarine;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label } from \"./ContactForm.styled\";\r\n\r\nfunction ContactForm(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n        />\r\n      </Label>\r\n      <input type=\"submit\" value=\"Add contact\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Label } from \"./Filter.styled\";\r\nexport function Filter({ onFilter }) {\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const handleOnChange = ({ target: { value } }) => {\r\n    const filter = value.toLowerCase();\r\n    setFilter(filter);\r\n    onFilter(filter);\r\n  };\r\n\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <input name=\"filter\" value={filter} onChange={handleOnChange}></input>\r\n    </Label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledContact = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  button {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { StyledContact } from \"./ContactItem.styled\";\r\n\r\nfunction ContactItem({ name, number, onDelete }) {\r\n  return (\r\n    <StyledContact>\r\n      {name}: {number}\r\n      <button onClick={onDelete}>delete</button>\r\n    </StyledContact>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"../../Contact\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n","const STORAGE_NAME = \"contacts\";\r\n\r\nexport const loadContacts = () => {\r\n  const contacts = localStorage.getItem(STORAGE_NAME);\r\n  if (contacts) {\r\n    return JSON.parse(contacts);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const saveContacts = (contacts) => {\r\n  localStorage.setItem(STORAGE_NAME, JSON.stringify(contacts));\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport { Filter } from \"./components/Filter/Filter\";\r\nimport { ContactList } from \"./components/Contact\";\r\nimport { saveContacts, loadContacts } from \"./components/utils/storage\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => loadContacts());\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => saveContacts(contacts), [contacts]);\r\n\r\n  const createContact = (e) => {\r\n    const { name, number } = e;\r\n    return {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n  };\r\n\r\n  const handleFilter = (e) => setFilter(e);\r\n\r\n  const handlerOnSubmit = (e) => {\r\n    if (contacts.find((contact) => contact.name === e.name)) {\r\n      alert(`${e.name} is already in contacts`);\r\n    } else {\r\n      const newContact = createContact(e);\r\n      const newContactList = [...contacts, newContact];\r\n      setContacts(newContactList);\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== e));\r\n  };\r\n\r\n  const getFiltered = () => {\r\n    return filter\r\n      ? contacts.filter((contact) =>\r\n          contact.name.toLowerCase().includes(filter)\r\n        )\r\n      : contacts;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={handlerOnSubmit} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter onFilter={handleFilter} />\r\n      <ContactList contacts={getFiltered()} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}